import { networkType } from "../../networkType.js";

let abi = "";
if (networkType === "testnet") {
  abi = [
    {
      constant: true,
      inputs: [
        { name: "nftContract", type: "address" },
        { name: "tokenId", type: "uint256" },
      ],
      name: "getNonCryptoOwner",
      outputs: [{ name: "", type: "string" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { name: "nft_a", type: "address" },
        { name: "tokenId", type: "uint256" },
        { name: "ownerId", type: "string" },
        { name: "currencyType", type: "uint256" },
      ],
      name: "buyNFT",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: true,
      inputs: [{ name: "", type: "address" }],
      name: "_supportNft",
      outputs: [{ name: "", type: "bool" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [],
      name: "platform",
      outputs: [{ name: "", type: "address" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [],
      name: "countCopy",
      outputs: [{ name: "", type: "uint256" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [],
      name: "collectionConfig",
      outputs: [{ name: "", type: "bool" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: false,
      inputs: [],
      name: "renounceOwnership",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: true,
      inputs: [],
      name: "nonCryptoNFTVault",
      outputs: [{ name: "", type: "address" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [
        { name: "_price", type: "uint256" },
        { name: "base", type: "uint256" },
        { name: "currencyType", type: "uint256" },
        { name: "tokenId", type: "uint256" },
        { name: "seller", type: "address" },
        { name: "nft_a", type: "address" },
      ],
      name: "calculatePrice",
      outputs: [{ name: "price", type: "uint256" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [{ name: "ownerId", type: "string" }],
      name: "getNonCryptoWallet",
      outputs: [{ name: "", type: "uint256" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { name: "nft_a", type: "address" },
        { name: "tokenId", type: "uint256" },
        { name: "seller", type: "address" },
        { name: "price", type: "uint256" },
        { name: "baseCurrency", type: "uint256" },
        { name: "allowedCurrencies", type: "uint256[]" },
      ],
      name: "sellNFT",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: true,
      inputs: [],
      name: "owner",
      outputs: [{ name: "", type: "address" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [],
      name: "isOwner",
      outputs: [{ name: "", type: "bool" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { name: "to", type: "address" },
        { name: "amount", type: "uint256" },
        { name: "userId", type: "string" },
      ],
      name: "withdrawAlia",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: true,
      inputs: [
        { name: "tokenId", type: "uint256" },
        { name: "nft_a", type: "address" },
      ],
      name: "getPercentages",
      outputs: [
        { name: "mainPerecentage", type: "uint256" },
        { name: "authorPercentage", type: "uint256" },
        { name: "blindRAddress", type: "address" },
      ],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [],
      name: "adminDiscount",
      outputs: [{ name: "", type: "uint256" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { name: "nftContract", type: "address" },
        { name: "tokenId", type: "uint256" },
        { name: "sellerId", type: "string" },
        { name: "price", type: "uint256" },
        { name: "currencyType", type: "uint256" },
      ],
      name: "sellNFTNonCrypto",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: true,
      inputs: [{ name: "", type: "address" }],
      name: "adminOwner",
      outputs: [{ name: "", type: "bool" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: false,
      inputs: [{ name: "newOwner", type: "address" }],
      name: "transferOwnership",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: true,
      inputs: [],
      name: "authorVault",
      outputs: [{ name: "", type: "address" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { name: "to", type: "address" },
        { name: "tokenURI", type: "string" },
        { name: "price", type: "uint256" },
        { name: "ownerId", type: "string" },
        { name: "royality", type: "uint256" },
        { name: "currencyType", type: "uint256" },
        { name: "allowedCurrencies", type: "uint256[]" },
      ],
      name: "MintAndSellNFT",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    { payable: true, stateMutability: "payable", type: "fallback" },
    {
      anonymous: false,
      inputs: [
        { indexed: true, name: "from", type: "address" },
        { indexed: false, name: "nft_a", type: "address" },
        { indexed: false, name: "tokenId", type: "uint256" },
        { indexed: false, name: "seller", type: "address" },
        { indexed: false, name: "price", type: "uint256" },
        { indexed: false, name: "royalty", type: "uint256" },
        { indexed: false, name: "baseCurrency", type: "uint256" },
        { indexed: false, name: "allowedCurrencies", type: "uint256[]" },
      ],
      name: "SellNFT",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        { indexed: true, name: "from", type: "address" },
        { indexed: false, name: "nft_a", type: "address" },
        { indexed: false, name: "tokenId", type: "uint256" },
        { indexed: false, name: "buyer", type: "address" },
        { indexed: false, name: "price", type: "uint256" },
        { indexed: false, name: "baseCurrency", type: "uint256" },
        { indexed: false, name: "calculated", type: "uint256" },
        { indexed: false, name: "currencyType", type: "uint256" },
      ],
      name: "BuyNFT",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        { indexed: true, name: "from", type: "address" },
        { indexed: false, name: "nft_a", type: "address" },
        { indexed: false, name: "tokenId", type: "uint256" },
        { indexed: false, name: "buyer", type: "string" },
        { indexed: false, name: "price", type: "uint256" },
        { indexed: false, name: "baseCurrency", type: "uint256" },
        { indexed: false, name: "calculated", type: "uint256" },
        { indexed: false, name: "currencyType", type: "uint256" },
      ],
      name: "BuyNFTNonCrypto",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        { indexed: true, name: "from", type: "address" },
        { indexed: false, name: "nft_a", type: "address" },
        { indexed: false, name: "tokenId", type: "uint256" },
        { indexed: false, name: "seller", type: "string" },
        { indexed: false, name: "price", type: "uint256" },
        { indexed: false, name: "baseCurrency", type: "uint256" },
        { indexed: false, name: "allowedCurrencies", type: "uint256[]" },
      ],
      name: "SellNFTNonCrypto",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        { indexed: true, name: "from", type: "address" },
        { indexed: false, name: "to", type: "string" },
        { indexed: false, name: "tokenURI", type: "string" },
        { indexed: false, name: "collection", type: "address" },
      ],
      name: "MintWithTokenURINonCrypto",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        { indexed: true, name: "from", type: "address" },
        { indexed: false, name: "to", type: "string" },
        { indexed: false, name: "tokenId", type: "uint256" },
      ],
      name: "TransferPackNonCrypto",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        { indexed: true, name: "collection", type: "address" },
        { indexed: true, name: "tokenId", type: "uint256" },
        { indexed: false, name: "minter", type: "address" },
        { indexed: false, name: "tokenURI", type: "string" },
      ],
      name: "MintWithTokenURI",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        { indexed: true, name: "previousOwner", type: "address" },
        { indexed: true, name: "newOwner", type: "address" },
      ],
      name: "OwnershipTransferred",
      type: "event",
    },
  ];
} else {
  abi = [
    {
      constant: true,
      inputs: [
        { name: "nftContract", type: "address" },
        { name: "tokenId", type: "uint256" },
      ],
      name: "getNonCryptoOwner",
      outputs: [{ name: "", type: "string" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { name: "nft_a", type: "address" },
        { name: "tokenId", type: "uint256" },
        { name: "ownerId", type: "string" },
        { name: "currencyType", type: "uint256" },
      ],
      name: "buyNFT",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: true,
      inputs: [{ name: "", type: "address" }],
      name: "_supportNft",
      outputs: [{ name: "", type: "bool" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [],
      name: "platform",
      outputs: [{ name: "", type: "address" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [],
      name: "countCopy",
      outputs: [{ name: "", type: "uint256" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [],
      name: "collectionConfig",
      outputs: [{ name: "", type: "bool" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: false,
      inputs: [],
      name: "renounceOwnership",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: true,
      inputs: [],
      name: "nonCryptoNFTVault",
      outputs: [{ name: "", type: "address" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [
        { name: "_price", type: "uint256" },
        { name: "base", type: "uint256" },
        { name: "currencyType", type: "uint256" },
        { name: "tokenId", type: "uint256" },
        { name: "seller", type: "address" },
        { name: "nft_a", type: "address" },
      ],
      name: "calculatePrice",
      outputs: [{ name: "price", type: "uint256" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [{ name: "ownerId", type: "string" }],
      name: "getNonCryptoWallet",
      outputs: [{ name: "", type: "uint256" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { name: "nft_a", type: "address" },
        { name: "tokenId", type: "uint256" },
        { name: "seller", type: "address" },
        { name: "price", type: "uint256" },
        { name: "baseCurrency", type: "uint256" },
        { name: "allowedCurrencies", type: "uint256[]" },
      ],
      name: "sellNFT",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: true,
      inputs: [],
      name: "owner",
      outputs: [{ name: "", type: "address" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [],
      name: "isOwner",
      outputs: [{ name: "", type: "bool" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { name: "to", type: "address" },
        { name: "amount", type: "uint256" },
        { name: "userId", type: "string" },
      ],
      name: "withdrawAlia",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: true,
      inputs: [
        { name: "tokenId", type: "uint256" },
        { name: "nft_a", type: "address" },
      ],
      name: "getPercentages",
      outputs: [
        { name: "mainPerecentage", type: "uint256" },
        { name: "authorPercentage", type: "uint256" },
        { name: "blindRAddress", type: "address" },
      ],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [],
      name: "adminDiscount",
      outputs: [{ name: "", type: "uint256" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { name: "nftContract", type: "address" },
        { name: "tokenId", type: "uint256" },
        { name: "sellerId", type: "string" },
        { name: "price", type: "uint256" },
        { name: "currencyType", type: "uint256" },
      ],
      name: "sellNFTNonCrypto",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: true,
      inputs: [{ name: "", type: "address" }],
      name: "adminOwner",
      outputs: [{ name: "", type: "bool" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: false,
      inputs: [{ name: "newOwner", type: "address" }],
      name: "transferOwnership",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: true,
      inputs: [],
      name: "authorVault",
      outputs: [{ name: "", type: "address" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { name: "to", type: "address" },
        { name: "tokenURI", type: "string" },
        { name: "price", type: "uint256" },
        { name: "ownerId", type: "string" },
        { name: "royality", type: "uint256" },
        { name: "currencyType", type: "uint256" },
        { name: "allowedCurrencies", type: "uint256[]" },
      ],
      name: "MintAndSellNFT",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    { payable: true, stateMutability: "payable", type: "fallback" },
    {
      anonymous: false,
      inputs: [
        { indexed: true, name: "from", type: "address" },
        { indexed: false, name: "nft_a", type: "address" },
        { indexed: false, name: "tokenId", type: "uint256" },
        { indexed: false, name: "seller", type: "address" },
        { indexed: false, name: "price", type: "uint256" },
        { indexed: false, name: "royalty", type: "uint256" },
        { indexed: false, name: "baseCurrency", type: "uint256" },
        { indexed: false, name: "allowedCurrencies", type: "uint256[]" },
      ],
      name: "SellNFT",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        { indexed: true, name: "from", type: "address" },
        { indexed: false, name: "nft_a", type: "address" },
        { indexed: false, name: "tokenId", type: "uint256" },
        { indexed: false, name: "buyer", type: "address" },
        { indexed: false, name: "price", type: "uint256" },
        { indexed: false, name: "baseCurrency", type: "uint256" },
        { indexed: false, name: "calculated", type: "uint256" },
        { indexed: false, name: "currencyType", type: "uint256" },
      ],
      name: "BuyNFT",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        { indexed: true, name: "from", type: "address" },
        { indexed: false, name: "nft_a", type: "address" },
        { indexed: false, name: "tokenId", type: "uint256" },
        { indexed: false, name: "buyer", type: "string" },
        { indexed: false, name: "price", type: "uint256" },
        { indexed: false, name: "baseCurrency", type: "uint256" },
        { indexed: false, name: "calculated", type: "uint256" },
        { indexed: false, name: "currencyType", type: "uint256" },
      ],
      name: "BuyNFTNonCrypto",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        { indexed: true, name: "from", type: "address" },
        { indexed: false, name: "nft_a", type: "address" },
        { indexed: false, name: "tokenId", type: "uint256" },
        { indexed: false, name: "seller", type: "string" },
        { indexed: false, name: "price", type: "uint256" },
        { indexed: false, name: "baseCurrency", type: "uint256" },
        { indexed: false, name: "allowedCurrencies", type: "uint256[]" },
      ],
      name: "SellNFTNonCrypto",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        { indexed: true, name: "from", type: "address" },
        { indexed: false, name: "to", type: "string" },
        { indexed: false, name: "tokenURI", type: "string" },
        { indexed: false, name: "collection", type: "address" },
      ],
      name: "MintWithTokenURINonCrypto",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        { indexed: true, name: "from", type: "address" },
        { indexed: false, name: "to", type: "string" },
        { indexed: false, name: "tokenId", type: "uint256" },
      ],
      name: "TransferPackNonCrypto",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        { indexed: true, name: "collection", type: "address" },
        { indexed: true, name: "tokenId", type: "uint256" },
        { indexed: false, name: "minter", type: "address" },
        { indexed: false, name: "tokenURI", type: "string" },
      ],
      name: "MintWithTokenURI",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        { indexed: true, name: "previousOwner", type: "address" },
        { indexed: true, name: "newOwner", type: "address" },
      ],
      name: "OwnershipTransferred",
      type: "event",
    },
  ];
}

export default abi;

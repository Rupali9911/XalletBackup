import { networkType } from "../../networkType.js";

let abi = "";
if (networkType === "testnet") {
  abi = [
    {
      constant: false,
      inputs: [{ name: "_tokenId", type: "uint256" }],
      name: "clearMapping",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { name: "_tokenId", type: "uint256" },
        { name: "ownerId", type: "string" },
        { name: "bidAddr", type: "address" },
      ],
      name: "updateBidder",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { name: "_tokenId", type: "uint256" },
        { name: "awardType", type: "bool" },
        { name: "ownerId", type: "string" },
      ],
      name: "claimAuctionAward",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [{ name: "_tokenId", type: "uint256" }],
      name: "addAwardType",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { name: "seller", type: "address" },
        { name: "_tokenId", type: "uint256" },
        { name: "_amount", type: "uint256" },
        { name: "awardType", type: "bool" },
        { name: "ownerId", type: "string" },
      ],
      name: "placeBidAward",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: true,
      inputs: [{ name: "_tokenId", type: "uint256" }],
      name: "getNonCryptoHighestBidder",
      outputs: [{ name: "", type: "string" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [{ name: "", type: "uint256" }],
      name: "isAwardType",
      outputs: [{ name: "", type: "bool" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: false,
      inputs: [],
      name: "init1",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      anonymous: false,
      inputs: [
        { indexed: true, name: "bidder", type: "address" },
        { indexed: false, name: "nftContract", type: "address" },
        { indexed: false, name: "tokenId", type: "uint256" },
        { indexed: false, name: "amount", type: "uint256" },
        { indexed: false, name: "awardType", type: "bool" },
        { indexed: false, name: "ownerId", type: "string" },
      ],
      name: "BidAward",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        { indexed: true, name: "bidder", type: "address" },
        { indexed: false, name: "nftContract", type: "address" },
        { indexed: false, name: "tokenId", type: "uint256" },
        { indexed: false, name: "amount", type: "uint256" },
        { indexed: false, name: "awardType", type: "bool" },
        { indexed: false, name: "ownerId", type: "string" },
      ],
      name: "ClaimAward",
      type: "event",
    },
  ];
} else if (networkType === "mainnet") {
  abi = [
    {
      constant: false,
      inputs: [{ name: "_tokenId", type: "uint256" }],
      name: "clearMapping",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { name: "_tokenId", type: "uint256" },
        { name: "ownerId", type: "string" },
        { name: "bidAddr", type: "address" },
      ],
      name: "updateBidder",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { name: "_tokenId", type: "uint256" },
        { name: "awardType", type: "bool" },
        { name: "ownerId", type: "string" },
      ],
      name: "claimAuctionAward",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [{ name: "_tokenId", type: "uint256" }],
      name: "addAwardType",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: false,
      inputs: [
        { name: "seller", type: "address" },
        { name: "_tokenId", type: "uint256" },
        { name: "_amount", type: "uint256" },
        { name: "awardType", type: "bool" },
        { name: "ownerId", type: "string" },
      ],
      name: "placeBidAward",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      constant: true,
      inputs: [{ name: "_tokenId", type: "uint256" }],
      name: "getNonCryptoHighestBidder",
      outputs: [{ name: "", type: "string" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: true,
      inputs: [{ name: "", type: "uint256" }],
      name: "isAwardType",
      outputs: [{ name: "", type: "bool" }],
      payable: false,
      stateMutability: "view",
      type: "function",
    },
    {
      constant: false,
      inputs: [],
      name: "init1",
      outputs: [],
      payable: false,
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      anonymous: false,
      inputs: [
        { indexed: true, name: "bidder", type: "address" },
        { indexed: false, name: "nftContract", type: "address" },
        { indexed: false, name: "tokenId", type: "uint256" },
        { indexed: false, name: "amount", type: "uint256" },
        { indexed: false, name: "awardType", type: "bool" },
        { indexed: false, name: "ownerId", type: "string" },
      ],
      name: "BidAward",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        { indexed: true, name: "bidder", type: "address" },
        { indexed: false, name: "nftContract", type: "address" },
        { indexed: false, name: "tokenId", type: "uint256" },
        { indexed: false, name: "amount", type: "uint256" },
        { indexed: false, name: "awardType", type: "bool" },
        { indexed: false, name: "ownerId", type: "string" },
      ],
      name: "ClaimAward",
      type: "event",
    },
  ];
}

export default abi;
